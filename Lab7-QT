//Widget.H
#ifndef WIDGET_H
#define WIDGET_H

#include <QWidget>
#include <QVector>
#include <QtSerialPort/QSerialPort>

namespace Ui {
class Widget;
}

class Widget : public QWidget
{
    Q_OBJECT

public:
    explicit Widget(QWidget *parent = 0);
    ~Widget();

private slots:
    void makeplot(double rpm, double corriente_ma);
    void on_pushButton_clicked();

    void readSerial();
    void processSerial(QString datos);
    void on_pushButton_2_clicked();
    void on_pushButton_4_clicked();
    void on_pushButton_9_clicked();

private:
    Ui::Widget *ui;
    void setupPlot();
    //double x[100],y[100];
    QVector<double> x;
    QVector<double> y;
    QVector<double> z;
    QVector<double> w;
    QSerialPort *ttl = nullptr;
    static const quint16 ttl_vendor_id = 9476;
    static const quint16 ttl_product_id = 768;
    QByteArray serialData;
    QString serialBuffer;
    QString parsed_data;
    double voltaje=0;
    uint16_t ADC=0;
    uint16_t rpm=0;
    uint16_t rp2=0;


};

#endif // WIDGET_H

//Widget.CPP
#include "widget.h"
#include "ui_widget.h"
#include <QVector>
#include <QtSerialPort/QSerialPort>
#include <QtSerialPort/QSerialPortInfo>

Widget::Widget(QWidget *parent) :
    QWidget(parent),
    ui(new Ui::Widget)
{
    ui->setupUi(this);
    ttl = new QSerialPort(this);
    serialBuffer = "";
    parsed_data = "";

    foreach(const QSerialPortInfo &serialPortInfo, QSerialPortInfo::availablePorts()){
        QString pname = serialPortInfo.portName();
        ui->comboBox->addItem(pname);
    }
    Widget:setupPlot();
}

Widget::~Widget()
{
   if(ttl->isOpen()){
       ttl->close();
       QObject::disconnect(ttl, SIGNAL(readyRead()), this, SLOT(readSerial()));
   }

    delete ui;
}

void Widget::setupPlot(){

    x.resize(101);
    y.resize(101);
    z.resize(101);
    w.resize(101);
    for (int i=0; i<101; ++i)
    {
      x[i] = (double)i;
      y[i] = (double)2;
      z[i] = (double)i;
      w[i] = (double)4;
    }

    ui->customPlot->addGraph(ui->customPlot->xAxis, ui->customPlot->yAxis);
    ui->customPlot->addGraph(ui->customPlot->xAxis, ui->customPlot->yAxis2);
    ui->customPlot->graph(0)->setData(x, y);
    ui->customPlot->graph(1)->setData(z, w);
    ui->customPlot->graph(1)->setPen(QPen(Qt::red));
    ui->customPlot->graph(0)->setName("RPM");
    ui->customPlot->graph(1)->setName("Corriente");
    ui->customPlot->plotLayout()->insertRow(0);
    ui->customPlot->plotLayout()->addElement(0, 0, new QCPTextElement(ui->customPlot, "Velocidad - Consumo Motor DC", QFont("sans", 12, QFont::Bold)));


    ui->customPlot->legend->setVisible(true);
    QFont legendFont = font();  // start out with MainWindow's font..
    legendFont.setPointSize(9); // and make a bit smaller for legend
    ui->customPlot->legend->setFont(legendFont);
    ui->customPlot->legend->setBrush(QBrush(QColor(255,255,255,230)));
    // by default, the legend is in the inset layout of the main axis rect. So this is how we access it to change legend placement:
    //ui->customPlot->axisRect()->insetLayout()->setInsetAlignment(0, Qt::AlignBottom|Qt::AlignRight);

    ui->customPlot->xAxis->setLabel("Time Relative");
    ui->customPlot->yAxis->setLabel("RPM.");
    ui->customPlot->xAxis->setRange(0, 100);
    ui->customPlot->yAxis->setRange(0, 1000);
    ui->customPlot->yAxis2->setLabel("mA");
    ui->customPlot->yAxis2->setRange(0, 1000);
    ui->customPlot->yAxis2->setVisible(true);
    ui->customPlot->replot();
}


void Widget::makeplot(double rpm, double corriente_ma){

    for (int i=0; i<100; ++i)
    {
      y[i] = y[i + 1];
      w[i] = w[i + 1];
    }
    y[100] = rpm;
    w[100] = corriente_ma;
    ui->customPlot->graph(0)->setData(x, y);
    ui->customPlot->graph(1)->setData(z, w);
    ui->customPlot->replot();
}

void Widget::on_pushButton_clicked()
{
    if(ui->lineEdit->text() != ""){
            double rpm = ui->lineEdit->text().toDouble();
            double corriente = ui->lineEdit_2->text().toDouble();
            makeplot(rpm, corriente);
        }else{
            QMessageBox msgBox;
            msgBox.setText("Escriba un numero de 0 a 50 en el campo");
            msgBox.exec();
        }

}

void Widget::processSerial(QString datos){

    //Aqu√≠ llegan los datos del puerto serial, se deben tomar las acciones necesarias, como graficar etc.
    qDebug()<< datos;
    if(datos.contains("\r\n")){
        QStringList lista = datos.split("\r\n");
        foreach (QString campos, lista) {
            if(campos.contains("Flow")){
                QStringList lista2 = campos.split(" ");
                if(lista2.length() == 2){
                    QString a = lista2.at(1);
                    makeplot(a.toDouble(), 2*a.toDouble());
                }
            }
        }
    }
}

void Widget::on_pushButton_2_clicked()
{
    QString ttl_port_name = ui->comboBox->currentText();
    if(ui->pushButton_2->text() == "Abrir"){
            ttl->setPortName(ttl_port_name);
            ttl->open(QSerialPort::ReadWrite);
            ttl->setBaudRate(QSerialPort::Baud115200);
            ttl->setDataBits(QSerialPort::Data8);
            ttl->setFlowControl(QSerialPort::NoFlowControl);
            ttl->setParity(QSerialPort::NoParity);
            ttl->setStopBits(QSerialPort::OneStop);
            QObject::connect(ttl, SIGNAL(readyRead()), this, SLOT(readSerial()));
            ui->pushButton_2->setText("Cerrar");
    }else{
        ttl->close();
        QObject::disconnect(ttl, SIGNAL(readyRead()), this, SLOT(readSerial()));
        ui->pushButton_2->setText("Abrir");
    }

}
void Widget::on_pushButton_4_clicked()//Set voltaje (asignar)
{
    voltaje=ui->lineEdit->text().toDouble();
    if(voltaje<0){
        voltaje=0;
    }else if(voltaje>1000){
        voltaje=1000;
    }
    QString voltaje_txt = QString::number(voltaje);
    ui->label_2->setText(voltaje_txt);
}
void Widget::on_pushButton_9_clicked()//enviar
{
    QByteArray a;
    a.append(voltaje/50);//aqui se pone el dato a enviar, el protocolo se agrega en las lineas de abajo
    int tam=a.size();
    char tam1, tam2, inicio=2, parada=3, confirma=0;
    for(int i=0; i<(tam);i++){
        confirma+=a[i];
    }
    tam+=5;
    tam1=tam;
    tam2=tam>>8;//mas significativo que tam1
    confirma=confirma+tam1+tam2+inicio;
    a.prepend(tam1);
    a.prepend(tam2);
    a.prepend(inicio);
    a.append(confirma);
    a.append(parada);

    if(ttl->isOpen()){
        ttl->write(a);

    }else{
        QMessageBox msg;
        msg.setText("El puerto esta cerrado");
        msg.exec();
    }

}
void Widget::readSerial()
{
    QByteArray buffer = ttl->readAll();
    //qDebug()<<buffer;
    if(buffer=="NO"){
        on_pushButton_9_clicked();//reenvia el dato
    }
    else if(buffer=="OK"){
    }
    else{
        rpm=0;
        rp2=0;
        ADC=0;
        rp2=buffer[1]&0xFF;
        rpm=rp2;
        rp2=0;
        rp2=(buffer[2]&0xFF)<<8;
        rpm=rpm|rp2;
        rp2=0;
        rp2=buffer[3]&0xFF;
        ADC=rp2;
        rp2=0;
        rp2=(buffer[4]&0xFF)<<8;
        ADC=ADC|rp2;
        //if(rpm<3000){
           makeplot(rpm,ADC);
        //}

    }
    qDebug()<<rpm<<endl<<"================================================";
    qDebug()<<posicion<<endl<<"================================================";
}

//Widget.ui

<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Widget</class>
 <widget class="QWidget" name="Widget">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>767</width>
    <height>449</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>RPM &amp; Corriente CACD</string>
  </property>
  <widget class="QCustomPlot" name="customPlot" native="true">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>160</y>
     <width>751</width>
     <height>361</height>
    </rect>
   </property>
  </widget>
  <widget class="QWidget" name="layoutWidget">
   <property name="geometry">
    <rect>
     <x>9</x>
     <y>9</y>
     <width>551</width>
     <height>25</height>
    </rect>
   </property>
   <layout class="QHBoxLayout" name="horizontalLayout">
    <item>
     <widget class="QLabel" name="label">
      <property name="text">
       <string>RPM</string>
      </property>
     </widget>
    </item>
    <item>
     <widget class="QLineEdit" name="lineEdit"/>
    </item>
    <item>
     <widget class="QLabel" name="label_2">
      <property name="text">
       <string>Corriente(mA)</string>
      </property>
     </widget>
    </item>
    <item>
     <widget class="QLineEdit" name="lineEdit_2"/>
    </item>
    <item>
     <widget class="QPushButton" name="pushButton">
      <property name="text">
       <string>Agregar Punto</string>
      </property>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QWidget" name="layoutWidget">
   <property name="geometry">
    <rect>
     <x>50</x>
     <y>50</y>
     <width>534</width>
     <height>66</height>
    </rect>
   </property>
   <layout class="QHBoxLayout" name="horizontalLayout_2"/>
  </widget>
  <widget class="QLabel" name="label_3">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>90</y>
     <width>40</width>
     <height>60</height>
    </rect>
   </property>
   <property name="minimumSize">
    <size>
     <width>0</width>
     <height>0</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>40</width>
     <height>16777215</height>
    </size>
   </property>
   <property name="text">
    <string>Puerto:</string>
   </property>
  </widget>
  <widget class="QComboBox" name="comboBox">
   <property name="geometry">
    <rect>
     <x>60</x>
     <y>110</y>
     <width>139</width>
     <height>20</height>
    </rect>
   </property>
   <property name="minimumSize">
    <size>
     <width>100</width>
     <height>0</height>
    </size>
   </property>
  </widget>
  <widget class="QPushButton" name="pushButton_2">
   <property name="geometry">
    <rect>
     <x>210</x>
     <y>110</y>
     <width>263</width>
     <height>23</height>
    </rect>
   </property>
   <property name="text">
    <string>Abrir</string>
   </property>
  </widget>
  <widget class="QWidget" name="">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>40</y>
     <width>528</width>
     <height>58</height>
    </rect>
   </property>
   <layout class="QHBoxLayout" name="horizontalLayout_6">
    <item>
     <layout class="QHBoxLayout" name="horizontalLayout_5"/>
    </item>
    <item>
     <widget class="QLabel" name="label_5">
      <property name="font">
       <font>
        <family>Arial</family>
        <pointsize>12</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="text">
       <string>SetPoint:</string>
      </property>
     </widget>
    </item>
    <item>
     <widget class="QLineEdit" name="lineEdit_4">
      <property name="sizePolicy">
       <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
        <horstretch>0</horstretch>
        <verstretch>0</verstretch>
       </sizepolicy>
      </property>
      <property name="minimumSize">
       <size>
        <width>133</width>
        <height>56</height>
       </size>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <pointsize>12</pointsize>
       </font>
      </property>
      <property name="autoFillBackground">
       <bool>false</bool>
      </property>
      <property name="inputMask">
       <string/>
      </property>
      <property name="text">
       <string/>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
    </item>
    <item>
     <widget class="QPushButton" name="pushButton_4">
      <property name="text">
       <string>Asignar</string>
      </property>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QPushButton" name="pushButton_9">
   <property name="geometry">
    <rect>
     <x>590</x>
     <y>60</y>
     <width>161</width>
     <height>41</height>
    </rect>
   </property>
   <property name="palette">
    <palette>
     <active>
      <colorrole role="WindowText">
       <brush brushstyle="SolidPattern">
        <color alpha="255">
         <red>0</red>
         <green>0</green>
         <blue>0</blue>
        </color>
       </brush>
      </colorrole>
      <colorrole role="Text">
       <brush brushstyle="SolidPattern">
        <color alpha="255">
         <red>0</red>
         <green>0</green>
         <blue>0</blue>
        </color>
       </brush>
      </colorrole>
      <colorrole role="PlaceholderText">
       <brush brushstyle="SolidPattern">
        <color alpha="128">
         <red>0</red>
         <green>0</green>
         <blue>0</blue>
        </color>
       </brush>
      </colorrole>
     </active>
     <inactive>
      <colorrole role="WindowText">
       <brush brushstyle="SolidPattern">
        <color alpha="255">
         <red>0</red>
         <green>0</green>
         <blue>0</blue>
        </color>
       </brush>
      </colorrole>
      <colorrole role="Text">
       <brush brushstyle="SolidPattern">
        <color alpha="255">
         <red>0</red>
         <green>0</green>
         <blue>0</blue>
        </color>
       </brush>
      </colorrole>
      <colorrole role="PlaceholderText">
       <brush brushstyle="SolidPattern">
        <color alpha="128">
         <red>0</red>
         <green>0</green>
         <blue>0</blue>
        </color>
       </brush>
      </colorrole>
     </inactive>
     <disabled>
      <colorrole role="WindowText">
       <brush brushstyle="SolidPattern">
        <color alpha="255">
         <red>120</red>
         <green>120</green>
         <blue>120</blue>
        </color>
       </brush>
      </colorrole>
      <colorrole role="Text">
       <brush brushstyle="SolidPattern">
        <color alpha="255">
         <red>120</red>
         <green>120</green>
         <blue>120</blue>
        </color>
       </brush>
      </colorrole>
      <colorrole role="PlaceholderText">
       <brush brushstyle="SolidPattern">
        <color alpha="128">
         <red>0</red>
         <green>0</green>
         <blue>0</blue>
        </color>
       </brush>
      </colorrole>
     </disabled>
    </palette>
   </property>
   <property name="font">
    <font>
     <family>Arial</family>
     <pointsize>22</pointsize>
     <weight>50</weight>
     <bold>false</bold>
    </font>
   </property>
   <property name="text">
    <string>ENVIAR</string>
   </property>
  </widget>
 </widget>
 <layoutdefault spacing="6" margin="11"/>
 <customwidgets>
  <customwidget>
   <class>QCustomPlot</class>
   <extends>QWidget</extends>
   <header>qcustomplot.h</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
